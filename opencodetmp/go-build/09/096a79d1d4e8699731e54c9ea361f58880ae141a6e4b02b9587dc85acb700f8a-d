// Code generated by cmd/cgo; DO NOT EDIT.

//line /home/alice/go/pkg/mod/github.com/go-gl/glfw/v3.3/glfw@v0.0.0-20250301202403-da16c1255728/native_linbsd_x11.go:1:1
//go:build (linux && !wayland) || (freebsd && !wayland) || (netbsd && !wayland) || (openbsd && !wayland)

package glfw

//#include <stdlib.h>
//#define GLFW_EXPOSE_NATIVE_X11
//#define GLFW_EXPOSE_NATIVE_GLX
//#define GLFW_INCLUDE_NONE
//#include "glfw/include/GLFW/glfw3.h"
//#include "glfw/include/GLFW/glfw3native.h"
import _ "unsafe"
import "unsafe"

func GetX11Display() * /*line :14:23*/_Ctype_Display /*line :14:32*/ {
	ret := ( /*line :15:9*/_Cfunc_glfwGetX11Display /*line :15:27*/)()
	panicError()
	return ret
}

// GetX11Adapter returns the RRCrtc of the monitor.
func (m *Monitor) GetX11Adapter()  /*line :21:35*/_Ctype_RRCrtc /*line :21:43*/ {
	ret := func() _Ctype_RRCrtc{ _cgo0 := /*line :22:29*/m.data; _cgoCheckPointer(_cgo0, nil); return /*line :22:36*/_Cfunc_glfwGetX11Adapter(_cgo0); }()
	panicError()
	return ret
}

// GetX11Monitor returns the RROutput of the monitor.
func (m *Monitor) GetX11Monitor()  /*line :28:35*/_Ctype_RROutput /*line :28:45*/ {
	ret := func() _Ctype_RROutput{ _cgo0 := /*line :29:29*/m.data; _cgoCheckPointer(_cgo0, nil); return /*line :29:36*/_Cfunc_glfwGetX11Monitor(_cgo0); }()
	panicError()
	return ret
}

// GetX11Window returns the Window of the window.
func (w *Window) GetX11Window()  /*line :35:33*/_Ctype_Window /*line :35:41*/ {
	ret := func() _Ctype_Window{ _cgo0 := /*line :36:28*/w.data; _cgoCheckPointer(_cgo0, nil); return /*line :36:35*/_Cfunc_glfwGetX11Window(_cgo0); }()
	panicError()
	return ret
}

// GetGLXContext returns the GLXContext of the window.
func (w *Window) GetGLXContext()  /*line :42:34*/_Ctype_GLXContext /*line :42:46*/ {
	ret := func() _Ctype_GLXContext{ _cgo0 := /*line :43:29*/w.data; _cgoCheckPointer(_cgo0, nil); return /*line :43:36*/_Cfunc_glfwGetGLXContext(_cgo0); }()
	panicError()
	return ret
}

// GetGLXWindow returns the GLXWindow of the window.
func (w *Window) GetGLXWindow()  /*line :49:33*/_Ctype_GLXWindow /*line :49:44*/ {
	ret := func() _Ctype_GLXWindow{ _cgo0 := /*line :50:28*/w.data; _cgoCheckPointer(_cgo0, nil); return /*line :50:35*/_Cfunc_glfwGetGLXWindow(_cgo0); }()
	panicError()
	return ret
}

// SetX11SelectionString sets the X11 selection string.
func SetX11SelectionString(str string) {
	s := ( /*line :57:7*/_Cfunc_CString /*line :57:15*/)(str)
	defer func() func() { _cgo0 := /*line :58:15*/unsafe.Pointer(s); return func() { _cgoCheckPointer(_cgo0, nil); /*line :58:33*/_Cfunc_free(_cgo0); }}()()
	( /*line :59:2*/_Cfunc_glfwSetX11SelectionString /*line :59:28*/)(s)
}

// GetX11SelectionString gets the X11 selection string.
func GetX11SelectionString() string {
	s := ( /*line :64:7*/_Cfunc_glfwGetX11SelectionString /*line :64:33*/)()
	return ( /*line :65:9*/_Cfunc_GoString /*line :65:18*/)(s)
}
